---
# tasks file for ansible-role-nginx-settings

- name: "Include OS-specific variables"
  include_vars: "{{ ansible_os_family }}.yaml"

- name: "Get include statement for conf.d path from {{ nginx_config }}"
  ansible.builtin.shell:
    cmd: grep -i "*.conf" {{ nginx_config }}
  register: output
  changed_when: output.rc != 0

- name: "Set facts based on conf.d output"
  ansible.builtin.set_fact:
    nginx_conf_path: "/{{ output.stdout.rsplit('/', 1)[0].split('/', 1)[1] }}/"

- name: "Get a list of NGINX conf files, with the SSL declaration"
  ansible.builtin.shell:
    cmd: grep -lr -i "ssl_certificate" {{ nginx_conf_path }}
  register: output
  changed_when: output.rc != 0

- name: "Set facts based on list of matching NGINX conf files"
  ansible.builtin.set_fact:
    ssl_config: "{{ output.stdout }}"

- name: "Get ssl_certificate path from {{ ssl_config }}"
  ansible.builtin.shell:
    cmd: grep -i "ssl_certificate /" {{ ssl_config }} | grep -v "#"
  register: output
  changed_when: output.rc != 0

- name: "Set facts based on ssl_certificate output"
  ansible.builtin.set_fact:
    ssl_certificate: "{{ output.stdout }}"
    ssl_certificate_file: "{{ output.stdout.rsplit('/',1)[1].rstrip(';') }}"
    ssl_certificate_path: "{{ output.stdout.strip().split(' ')[1].rsplit('/',1)[0] }}"

- name: "Get ssl_certificate_key path from {{ ssl_config }}"
  ansible.builtin.shell:
    cmd: grep -i "ssl_certificate_key /" {{ ssl_config }} | grep -v "#"
  register: output
  changed_when: output.rc != 0

- name: "Set facts based on ssl_certificate_key output"
  ansible.builtin.set_fact:
    ssl_key: "{{ output.stdout }}"
    ssl_key_file: "{{ output.stdout.rsplit('/',1)[1].rstrip(';') }}"
    ssl_key_path: "{{ output.stdout.strip().split(' ')[1].rsplit('/',1)[0] }}"

#- name: "Print returned information"
#  ansible.builtin.debug:
#    msg:
#      - "{{ ssl_config }}"
#      - "{{ nginx_conf_path }}"
#      - "{{ ssl_certificate }}"
#      - "{{ ssl_certificate_file }}"
#      - "{{ ssl_certificate_path }}"
#      - "{{ ssl_key }}"
#      - "{{ ssl_key_file }}"
#      - "{{ ssl_key_path }}"

- name: "Upload Certificates to {{ inventory_hostname }}"
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: '0640'
  with_items:
    - src: "{{ certificate_file }}"
      dest: "{{ ssl_certificate_path }}/"
    - src: "{{ certificate_key }}"
      dest: "{{ ssl_key_path }}/"

- name: "Update {{ ssl_config }} with new Certificate files"
  ansible.builtin.lineinfile:
    dest: "{{ ssl_config }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
    mode: '0644'
    backup: no
  with_items:
    - regexp: "^{{ ssl_certificate }}"
      line: "    ssl_certificate {{ ssl_certificate_path }}/{{ certificate_file.rsplit('/', 1)[1] }};"
    - regexp: "^{{ ssl_key }}"
      line: "    ssl_certificate_key {{ ssl_key_path }}/{{ certificate_key.rsplit('/', 1)[1] }};"
  #notify: "Restart NGINX HTTP Server Daemon"